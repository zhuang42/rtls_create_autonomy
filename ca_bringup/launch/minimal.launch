<launch>
  <arg name="robot_id"  default="$(optenv ID 1)"      doc="Unique identifier of the robot [1-Inf.)"/>
  <arg name="ns"        value="create$(arg robot_id)" doc="Namespace of the robot. By default: create1"/>
  <arg name="use_nodelets" default="$(optenv NODELET true)"
			 doc="Use nodelets: http://wiki.ros.org/nodelet" />
  <arg name="ros_control" default="$(optenv ROS_CONTROL False)" doc="Use ros_control"/>
  <arg name="raspicam_receiver_IP" default=""         doc="Raspicam client IP"/>
  <arg name="laser" default="$(optenv LASER)"      doc="Laser for mapping the environment"/>

  <arg name="imu"   default="$(optenv IMU true)"   doc="Flag to use the IMU MPU9255"/>

  <param name="tf_prefix" value="create$(arg robot_id)_tf" />

  <!-- Controllers -->
  <include file="$(find ca_node)/launch/create_2.launch"      unless="$(arg ros_control)"/>
  <include file="$(find ca_control)/launch/control_hw.launch" if="$(arg ros_control)"/>

  <!-- RViz -->
  <!-- Remove rviz from here -->
  <!-- <include if="$(arg rviz)" file="$(find ca_tools)/launch/rviz.launch"/> -->

  <!-- raspicam -->
  <!-- <include if="$(eval arg('raspicam_receiver_IP') != '')"
           file="$(find ca_visual_odometry)/launch/raspicam_stream.launch">
    <arg name="IP" value="$(arg raspicam_receiver_IP)"/>
  </include> -->

  <group ns="$(arg ns)">
    <!-- Robot description -->
    <include file="$(find ca_description)/launch/create_description.launch">
      <arg name="robot_id" value="$(arg robot_id)"/>
    </include>

    <!-- Nodelet manager -->
    <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" if="$(arg use_nodelets)"/>

    <!-- IMU -->
    <include if="$(arg imu)" file="$(find ca_imu)/launch/mpu9255.launch"/>

    <!-- Mapping sensors -->
    <include if="$(eval arg('laser')=='astra')"     file="$(find ca_camera)/launch/orbbec_astra_pro.launch"/>
    <include if="$(eval arg('laser')=='kinect')"    file=""/>
    <include if="$(eval arg('laser')=='r200')"      file=""/>
    <include if="$(eval arg('laser')=='rplidar')"   file="$(find ca_camera)/launch/rplidar_a2.launch"/>
    <include if="$(eval arg('laser')=='xtion_pro')" file="$(find ca_camera)/launch/asus_xtion_pro.launch"/>
  </group>
</launch>
